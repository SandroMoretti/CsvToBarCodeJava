/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csvtobarcode;

import com.itextpdf.text.pdf.BarcodeQRCode;
import com.itextpdf.text.pdf.codec.Base64;
import com.itextpdf.text.pdf.qrcode.EncodeHintType;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import org.krysalis.barcode4j.impl.code128.Code128Bean;
import org.krysalis.barcode4j.output.bitmap.BitmapCanvasProvider;

/**
 *
 * @author júnior
 */
public class Tela extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form Tela
     */
    boolean qr = false;
    String separador = "\\;";

    public Tela() {
        try{
            
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }catch(Exception e){
            e.printStackTrace();
        }
        initComponents();
        try {
            comboBoxSeparador.addItem("Virgula ( , )");
            String pasta = new File(Tela.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getParent();
            jLabel6.setText(pasta);
            comboBoxTipoBAR.setFocusable(false);
            comboBoxSeparador.setFocusable(false);
        } catch (Exception e) {
        }
    }
    String arquivo = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboBoxTipoBAR = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        comboBoxSeparador = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Carregar arquivo");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel1.setText("Atenção: carregue um csv com os seguintes campos:");

        jLabel2.setBackground(new java.awt.Color(153, 0, 51));
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Peca | Qualidade | Sequencia | Data");

        jLabel3.setText("Linhas geradas com sucesso:");

        jLabel4.setText("0");

        jLabel5.setText("Pasta:");

        jLabel6.setText("...");

        comboBoxTipoBAR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código de barras", "QR Code" }));
        comboBoxTipoBAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTipoBARActionPerformed(evt);
            }
        });

        jLabel7.setText("Tipo de código de barras:");

        jLabel8.setText("Separador do CSV:");

        comboBoxSeparador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ponto e virgula ( ; )" }));
        comboBoxSeparador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSeparadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxTipoBAR, 0, 295, Short.MAX_VALUE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comboBoxSeparador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxTipoBAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxSeparador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        JFileChooser fj = new JFileChooser();
        fj.showOpenDialog(this);
        if (fj.getSelectedFile() != null) {
            this.arquivo = fj.getSelectedFile().getAbsolutePath();
            lerArquivo(arquivo);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void comboBoxTipoBARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTipoBARActionPerformed
        String selected = (String)comboBoxTipoBAR.getSelectedItem();
        if(selected.equals("QR Code")){
            qr = true;
        }else{
            qr = false;
        }
    }//GEN-LAST:event_comboBoxTipoBARActionPerformed

    private void comboBoxSeparadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSeparadorActionPerformed
        if(comboBoxSeparador.getSelectedIndex() == 0){  // ponto e virgula;
            separador = "\\;";
        }else{
            separador = "\\,";
        }
    }//GEN-LAST:event_comboBoxSeparadorActionPerformed

    @Override
    public void run() {
        System.out.println("Executando: " + this.arquivo);
        try {
            String pasta = new File(Tela.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getParent();
            int qntd = 0;
            String html = "<!DOCTYPE html><html><head> <meta charset=\"UTF-8\"><link rel=\"stylesheet\" type=\"text/css\" href=\"theme.css\">"
                    + "\n"
                    + "</head><body><table><tr><th>PeCa</th><th>Qualidade</th><th>Sequencia</th><th>Data</th><th>Codigo</th><th>Imagem</th></tr>";
            BufferedReader reader;
            try {
                reader = new BufferedReader(new FileReader(arquivo));
                String line = reader.readLine();
                while (line != null) {
                    html += "<tr>";
                    String peca = line.split(separador)[0];
                    String qualidade = line.split(separador)[1];
                    String sequencia = line.split(separador)[2];
                    String data = line.split(separador)[3];
                    
                    // read next line
                    String codigo = peca + qualidade + sequencia + data;

                    html += "<td>" + peca + "</td>";
                    html += "<td>" + qualidade + "</td>";
                    html += "<td>" + sequencia + "</td>";
                    html += "<td>" + data + "</td>";
                    html += "<td>" + codigo + "</td>";
                    String b64 = "";
                    if (!qr) {
                        b64 = saveBarCode(pasta, codigo);
                    } else {
                        // salvar com qr code
                        b64 = saveQrCode(pasta, codigo);
                    }
                    
                    html += "<td class='td-image'><img width='250px' src='data:image/png;base64, " + b64 + "'></td>";
                    html += "</tr>";
                    qntd++;
                    jLabel4.setText(qntd + "");
                    line = reader.readLine();
                }
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            html += "</table></body></html>";

            // inicio
            java.io.OutputStream os = null;
            try {
                os = new FileOutputStream(new File(pasta + "\\index.html"));
                os.write(html.getBytes(), 0, html.length());
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                try {
                    os.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            // fim
        } catch (Exception e) {
            // TODO: handle exception
            e.printStackTrace();
        }
    }

    public String saveBarCode(String pasta, String codigo) {
        try {
            Code128Bean code128 = new Code128Bean();
            code128.setHeight(15f);
            code128.setModuleWidth(0.3);
            code128.setQuietZone(10);
            code128.doQuietZone(true);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            BitmapCanvasProvider canvas = new BitmapCanvasProvider(baos, "image/x-png", 300, BufferedImage.TYPE_BYTE_BINARY, false, 0);
            code128.generateBarcode(canvas, codigo);
            canvas.finish();
            //write to png file
            FileOutputStream fos = new FileOutputStream(pasta + "\\imagens\\" + codigo + ".png");
            fos.write(baos.toByteArray());
            String b64 = Base64.encodeFromFile(pasta + "\\imagens\\" + codigo + ".png");
            fos.flush();
            fos.close();
            return b64;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "";
    }

    public String saveQrCode(String pasta, String codigo) {
        Map<EncodeHintType, Object> hints = new HashMap<>();
        BarcodeQRCode qr = new BarcodeQRCode(codigo, 300, 300, hints);
        Image image = qr.createAwtImage(Color.BLACK, Color.WHITE);

        BufferedImage bi = new BufferedImage(300, 300, BufferedImage.TYPE_INT_RGB);
        Graphics g = bi.getGraphics();
        try {
            g.drawImage(image, 0, 0, null);
            File f = new File(pasta + "\\imagens\\" + codigo + ".png");
            ImageIO.write(bi, "png", f);
            return encodeFileToBase64Binary(f);

        } catch (IOException e) {
            e.printStackTrace();
        }
        //image.getGraphics().drawImage(toolkitImage, 0, 0, null);
        //ImageIO.write(bufferedImage, "jpg", new File("C:\\myImage.jpg"));
        return "";
    }

    private static String encodeFileToBase64Binary(File file) {
        String encodedfile = null;
        try {
            FileInputStream fileInputStreamReader = new FileInputStream(file);
            byte[] bytes = new byte[(int) file.length()];
            fileInputStreamReader.read(bytes);
            encodedfile = Base64.encodeBytes(bytes).toString();
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        return encodedfile;
    }

    public void lerArquivo(String arquivo) {
        System.out.println("Lendo arquivo");
        new Thread(this).start();
    }

    /**
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxSeparador;
    private javax.swing.JComboBox<String> comboBoxTipoBAR;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
